# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  username: String!
  password: String!
  boxes: [BoxType!]!
}

type LocationType {
  latitude: Float!
  longitude: Float!
}

type WarehouseGroupType {
  id: ID!
  name: String!
  location: LocationType!
  warehouses: [WarehouseType!]!
}

type WarehouseType {
  id: ID!
  boxes: [BoxType!]!
  warehouseGroup: WarehouseGroupType!
}

type BoxType {
  id: ID!
  name: String!
  description: String!
  imageIds: [String!]!
  notes: [String!]!
  dateWhenCanBeOpened: DateTime
  placement: Float
  warehouse: WarehouseType
  user: UserType!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PositionType {
  x: Float!
  y: Float!
  z: Float!
}

type BoxPositionType {
  boxId: String!
  position: PositionType!
}

type TransportSubstrateType {
  position: PositionType!
  warehouseId: String!
  boxOnSubstrate: Boolean!
  speed: Float!
}

type BoxToTransportType {
  warehouseId: String!
  position: PositionType
  boxId: String!
}

type GroupBoxesToTransportType {
  actionName: String!
  box: BoxToTransportType!
}

type Query {
  boxes: [BoxType!]!
  warehouses: [WarehouseType!]!
  warehouse(id: String!): [WarehouseType!]!
  boxesPosition(warehouseId: String!): [BoxPositionType!]!
  freeWarehouseByWarehouseGroupId(id: String!): WarehouseType!
  transportSubstratePositions: [TransportSubstrateType!]!
  transportSubstratePosition(warehouseId: String!): TransportSubstrateType!
  boxToTransport(warehouseId: String!): GroupBoxesToTransportType!
  putBoxIntoWarehouse(putBoxIntoWarehouseInput: PutBoxIntoWarehouseInput!): WarehouseType!
  unloadBoxFromWarehouse(unloadBoxFromWarehouseInput: UnloadBoxFromWarehouseInput!): WarehouseType!
  users: [UserType!]!
  me(boxId: String): UserType!
  warehouseGroups: [WarehouseGroupType!]!
  warehouseGroup(id: String!): WarehouseGroupType!
}

input PutBoxIntoWarehouseInput {
  warehouseGroupId: String!
  boxId: String!
  seconds: Float!
}

input UnloadBoxFromWarehouseInput {
  warehouseId: String!
  boxId: String!
}

type Mutation {
  createBox(input: BoxInput!): BoxType!
  addPlacementForBox(input: AddPlacementForBoxInput!): BoxType!
  addNoteIntoBox(input: AddNoteIntoBoxInput!): BoxType!
  createWarehouse(warehouseId: String!): WarehouseType!
  createUser(input: UserInput!): UserType!
  createWarehousesGroup(warehouseGroupInput: WarehouseGroupInput!): WarehouseGroupType!
}

input BoxInput {
  name: String!
  description: String!
}

input AddPlacementForBoxInput {
  boxId: String!
  placement: Float!
  warehouseId: String!
}

input AddNoteIntoBoxInput {
  boxId: String!
  note: String!
}

input UserInput {
  username: String!
  password: String!
}

input WarehouseGroupInput {
  name: String!
  location: LocationInput!
}

input LocationInput {
  latitude: Float!
  longitude: Float!
}

type Subscription {
  moveTransport(input: MoveTransportInput!): TransportSubstrateType!
  boxesToTransportPosition(input: BoxStatusInput!): GroupBoxesToTransportType!
}

input MoveTransportInput {
  warehouseId: String!
}

input BoxStatusInput {
  warehouseId: String!
}
