# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  username: String!
  password: String!
  boxes: [BoxType!]!
}

type Location {
  latitude: Float!
  longitude: Float!
}

type WarehouseType {
  id: ID!
  name: String!
  location: Location!
  boxes: [BoxType!]!
}

type BoxType {
  id: ID!
  name: String!
  description: String!
  placement: Float
  warehouse: WarehouseType
  user: UserType!
}

type PositionType {
  x: Float!
  y: Float!
  z: Float!
}

type BoxPositionType {
  position: PositionType!
}

type TransportSubstrateType {
  position: PositionType!
  warehouseId: String!
  speed: Float!
}

type Query {
  boxes: [BoxType!]!
  box(name: String!): [BoxType!]!
  warehouses: [WarehouseType!]!
  warehouse(id: String!): [WarehouseType!]!
  boxPositions: [BoxPositionType!]!
  transportSubstratePositions: [TransportSubstrateType!]!
  transportSubstratePosition(warehouseId: String!): TransportSubstrateType!
  testOdessa: String!
  testKyiv: String!
  users: [UserType!]!
  getUser: UserType!
}

type Mutation {
  createBox(input: BoxInput!): BoxType!
  addPlacementForBox(input: AddPlacementForBoxInput!): BoxType!
  uploadFile(file: Upload!): Boolean!
  createdWarehouse(input: WarehouseInput!): WarehouseType!
  createUser(input: UserInput!): UserType!
}

input BoxInput {
  name: String!
  description: String!
  user: String!
}

input AddPlacementForBoxInput {
  boxId: String!
  placement: Float!
  warehouseId: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input WarehouseInput {
  name: String!
  location: LocationInput!
}

input LocationInput {
  latitude: Float!
  longitude: Float!
}

input UserInput {
  username: String!
  password: String!
}

type Subscription {
  moveTransport(input: MoveTransportInput!): TransportSubstrateType!
}

input MoveTransportInput {
  warehouseId: String!
}
